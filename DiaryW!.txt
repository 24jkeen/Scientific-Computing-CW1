to start with i will solve using Euler then might grow up after that

find example of a user of odeint and learn from it

over the long term we see the oscilations stabilise

there is a periodic orbit at w = 1, t ~= 140, that repeates approximately every 2pi



for the root finding my first thought is NR iterations but there might be a method already in a library somewhere; no need to reinvent the wheel

figured out that shooting was much less useful than NR or similar root finding iterators 
shooting does a different thing to what i was expecting

coded up the shooting method
had issues with indexing
refined it to take an approximate time input instead of a step
might need some extra protection from the user

got cunfused by git and deleted it

recoded it with a bit more refinement and stability which was helpful i just would rather have done it deliberately if at all

added in the comments 

pushed it up to bitbucket

for w = 1.2 the function oscillates for as long as i am able to simulate meaning that there are a huge number of stable orbits

need to find / understand that one unstable one mentioned


code already set up for arbitrary input ode's


answers to the question without the code:

a user may wish to put in a flag that lets them select a specific DE to solve that is already coded into a library set up
for simple DE's they may want to code it in, most likely in command line
for complex equations the user could submit it in first order form as a text file that might be read and processed
or potentially hardcoded into the python script and run accordingly

the user should be able to pick the initial values for anything however also be able to choose not to 
choose if they want a plot after the code has run if we are going for a more grown up piece of software
they may also want a more finessed method for the shooting, and potentially for the integration itself since both have flaws 

may research the extension activities at a later date






